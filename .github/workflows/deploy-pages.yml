name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [main, master]

permissions:
  pages: write
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Upload production artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download pages artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./artifact

      - name: Extract artifact and list files (debug)
        run: |
          echo "Contents of ./artifact before extraction:";
          ls -la ./artifact || true;
          # If the artifact is a zip or tar, extract into ./artifact/content
          if ls ./artifact/*.zip 1> /dev/null 2>&1; then
            unzip -q ./artifact/*.zip -d ./artifact/content || true
          elif ls ./artifact/*.tar 1> /dev/null 2>&1; then
            mkdir -p ./artifact/content && tar -xf ./artifact/*.tar -C ./artifact/content || true
          else
            # Some upload actions create a single file named artifact.tar â€” try to extract it
            if [ -f ./artifact/artifact.tar ]; then
              mkdir -p ./artifact/content && tar -xf ./artifact/artifact.tar -C ./artifact/content || true
            fi
          fi
          echo "Contents of ./artifact/content after extraction:";
          ls -la ./artifact/content || true

      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./artifact/content
          publish_branch: gh-pages
